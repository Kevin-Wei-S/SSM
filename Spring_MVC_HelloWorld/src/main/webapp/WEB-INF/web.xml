<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		 xmlns="http://java.sun.com/xml/ns/javaee" 
		 xsi:schemaLocation="http://Java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
		 version="2.5">
  <display-name>Spring_MVC_HelloWorld</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 
  	配置SpringMVC的前端控制器DispatcherServlet 
  		SpringMVC的配置文件默認的位置和名稱: 
  			位置: WEB-INF下 
			名稱: <servlet-name>標籤的值 + -servlet.xml 
			當前配置下的配置文件名稱: SpringMVC-servlet.xml 
	-->
	<servlet>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 設置SpringMVC配置文件的位置和名稱 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<!-- Servlet預設初始化在第一次訪問時 -->
		<!-- 
			將Servlet初始化時間提前為伺服器啟動時 
			因DispatcherServlet的初始化內容有很多 
			將影響用戶體驗
		-->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<!-- 
			/: 匹配瀏覽器向服務器發送的所有請求(除了.jsp外) 
			/*: 匹配瀏覽器向服務器發送的所有請求(包含.jsp) 
			*.do: 後綴匹配 
			注意: 
				為何不能寫/*: 因為.jsp檔必須由Tomcat的org.apache.jasper.servlet.JspServlet處理, 
				如果我們用/*, jsp會由DispatcherServlet來處理, 然而DispatcherServlet, 
				並沒有處理jsp的相關代碼. 
		-->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>