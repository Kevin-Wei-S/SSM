<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   					   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
	   					   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">					   
	   				
	<!-- 導入jdbc.properties相依文件 -->	   				
	<context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
	<!-- 掃描組件(除了控制層) -->	   					   
	<context:component-scan base-package="com.kwei.ssm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
	</context:component-scan>	   		
	   			
	<!-- 配置數據源 -->	   				   
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!--	
		Spring整合Mybatis 
		配置SqlSessionFactoryBean, 可以直接在Spring的IOC中獲取SqlSessionFactory 
	-->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 設置mybatis的核心配置文件的路徑 -->
		<property name="configLocation" value="classpath:mybatis_config.xml"></property>
		<!-- 除了設置mybatis的核心配置文件外, 也可以直接在此根據屬性配置 -->
		<!-- 設置數據源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 設置類型別名所對應的包 -->
		<property name="typeAliasesPackage" value="com.kwei.ssm.pojo"></property>
		<!-- 如果mapper接口與mapper配置文件在同一個包下可以不配置 -->
		<!-- <property name="mapperLocations" value="classpath:com/kwei/ssm/mapper/*.xml"></property> -->
		<!-- 以下較繁複的屬性配置於mybatis_config.xml中 -->
		<!-- <property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor"></bean>
			</array>
		</property> -->
	</bean>
	
	<!-- 
		Spring整合Mybatis
		配置Mapper接口的掃描, 可以將指定包下的所有的mapper接口, 
		通過上述配置過的SqlSessionFactoryBean的SqlSession對象,
		創建代理實現類, 並將這些對象交由Spring的IOC容器管理.
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.kwei.ssm.mapper"></property>
	</bean>
	
	<!-- 配置事務管理器(切面) -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 
		開啟事務的註解驅動
		將使用註解@Transactional標示的方法或類中所有的方法進行事務管理
	-->
	<tx:annotation-driven transaction-manager="transactionManager" />	
	
</beans>